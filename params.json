{
  "name": "Active validation",
  "tagline": "Gem for commonly used validators.",
  "body": "# ActiveValidation\r\n\r\n[![Gem Version](https://badge.fury.io/rb/active_validation.svg)](http://badge.fury.io/rb/active_validation)\r\n[![Build Status](https://travis-ci.org/drexed/active_validation.svg?branch=master)](https://travis-ci.org/drexed/active_validation)\r\n[![Coverage Status](https://coveralls.io/repos/github/drexed/active_validation/badge.svg?branch=master)](https://coveralls.io/github/drexed/active_validation?branch=master)\r\n\r\nActiveValidation is a collection of custom validators that are often required in Rails applications plus shoulda-style RSpec matchers to test the validation rules.\r\n\r\nHighly recommended validators:\r\n  * **DateTime:** Validates Timeliness - https://github.com/adzap/validates_timeliness\r\n  * **Existence:** Validates Existence - https://github.com/perfectline/validates_existence\r\n  * **Group:** Group Validations - https://github.com/adzap/grouped_validations\r\n  * **Overlap:** Validates Overlap - https://github.com/robinbortlik/validates_overlap\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'active_validation'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install active_validation\r\n\r\n## Table of Contents\r\n\r\n* [Alpha](#alphavalidator)\r\n* [AlphaNumeric](#alphanumericvalidator)\r\n* [Base64](#base64validator)\r\n* [Boolean](#booleanvalidator)\r\n* [Coordinates](#coordinatesvalidator)\r\n* [Credit Card](#creditcardvalidator)\r\n* [Currency](#currencyvalidator)\r\n* [CUSIP](#cusipvalidator)\r\n* [Email](#emailvalidator)\r\n* [Equality](#equalityvalidator)\r\n* [Hex](#hexvalidator)\r\n* [IMEI](#imeivalidator)\r\n* [IP](#ipvalidator)\r\n* [ISBN](#isbnvalidator)\r\n* [ISIN](#isinvalidator)\r\n* [MAC Address](#macaddressvalidator)\r\n* [Name](#namevalidator)\r\n* [Password](#passwordvalidator)\r\n* [Phone](#phonevalidator)\r\n* [SEDOL](#sedolvalidator)\r\n* [Slug](#slugvalidator)\r\n* [SSN](#ssnvalidator)\r\n* [Tracking Number](#trackingnumbervalidator)\r\n* [Type](#typevalidator)\r\n* [URL](#urlvalidator)\r\n* [Username](#usernamevalidator)\r\n* [UUID](#uuidvalidator)\r\n\r\n## AlphaValidator\r\n\r\n**Ex:** Example or Example Title\r\n\r\n**Rules:**\r\n * Characters: A-Z a-z\r\n * Must include: A-Z a-z\r\n\r\nWith an ActiveRecord model:\r\n\r\n```ruby\r\nclass Book < ActiveRecord::Base\r\n  attr_accessor :title, :name\r\n  validates :title, alpha: true\r\nend\r\n```\r\n\r\nOr any ruby class:\r\n\r\n```ruby\r\nclass Book\r\n  include ActiveModel::Validations\r\n  attr_accessor :title, :name\r\n  validates :title, alpha: true\r\nend\r\n```\r\n\r\nOptions: :strict, case: [:lower, :upper]\r\n\r\n```ruby\r\nvalidates :title, alpha: { strict: true }\r\nvalidates :title, alpha: { case: :lower }\r\nvalidates :title, alpha: { case: :upper, strict: true }\r\n```\r\n\r\nRSpec matcher is also available for your convenience:\r\n\r\n```ruby\r\ndescribe Book do\r\n  it { should ensure_valid_alpha_format_of(:title) }\r\n  it { should_not ensure_valid_alpha_format_of(:name) }\r\nend\r\n```\r\n\r\n## AlphaNumericValidator\r\n\r\n**Ex:** Example1 or Example Title 1\r\n\r\n**Rules:**\r\n * Characters: A-Z a-z 0-9\r\n * Must include: A-Z a-z 0-9\r\n\r\nWith an ActiveRecord model:\r\n\r\n```ruby\r\nclass Book < ActiveRecord::Base\r\n  attr_accessor :title, :name\r\n  validates :title, alpha_numeric: true\r\nend\r\n```\r\n\r\nOr any ruby class:\r\n\r\n```ruby\r\nclass Book\r\n  include ActiveModel::Validations\r\n  attr_accessor :title, :name\r\n  validates :title, alpha_numeric: true\r\nend\r\n```\r\n\r\nOptions: :strict\r\nStrict: requires not including spaces\r\n\r\n```ruby\r\nvalidates :title, alpha_numeric: { strict: true }\r\n```\r\n\r\nRSpec matcher is also available for your convenience:\r\n\r\n```ruby\r\ndescribe Book do\r\n  it { should ensure_valid_alpha_numeric_format_of(:title) }\r\n  it { should_not ensure_valid_alpha_numeric_format_of(:name) }\r\nend\r\n```\r\n\r\n## Base64Validator\r\n\r\n**Ex:** YW55IGNhcm5hbCBwbGVhcw==\r\n\r\n**Rules:**\r\n * Characters: 0-1 A-Z =\r\n\r\nWith an ActiveRecord model:\r\n\r\n```ruby\r\nclass Code < ActiveRecord::Base\r\n  attr_accessor :code, :name\r\n  validates :code, base64: true\r\nend\r\n```\r\n\r\nOr any ruby class:\r\n\r\n```ruby\r\nclass Code\r\n  include ActiveModel::Validations\r\n  attr_accessor :code, :name\r\n  validates :code, base64: true\r\nend\r\n```\r\n\r\nRSpec matcher is also available for your convenience:\r\n\r\n```ruby\r\ndescribe Code do\r\n  it { should ensure_valid_base64_format_of(:code) }\r\n  it { should_not ensure_valid_base64_format_of(:name) }\r\nend\r\n```\r\n\r\n## BooleanValidator\r\n\r\n**Ex:** true or false or 1 or 0\r\n\r\n**Rules:**\r\n * Characters: 0-1\r\n * Equality: true or false\r\n\r\nWith an ActiveRecord model:\r\n\r\n```ruby\r\nclass User < ActiveRecord::Base\r\n  attr_accessor :active, :name\r\n  validates :active, boolean: true\r\nend\r\n```\r\n\r\nOr any ruby class:\r\n\r\n```ruby\r\nclass User\r\n  include ActiveModel::Validations\r\n  attr_accessor :active, :name\r\n  validates :active, boolean: true\r\nend\r\n```\r\n\r\nRSpec matcher is also available for your convenience:\r\n\r\n```ruby\r\ndescribe User do\r\n  it { should ensure_valid_boolean_format_of(:active) }\r\n  it { should_not ensure_valid_boolean_format_of(:name) }\r\nend\r\n```\r\n\r\n## CoordinateValidator\r\n\r\n**Ex:** 178.213 or -34.985\r\n\r\n**Rules:**\r\n* Range: latitude (90 to -90), longitude (180 to -180)\r\n* Characters: 0-9\r\n\r\nWith an ActiveRecord model:\r\n\r\n```ruby\r\n# :coor => [78.47, -169.92]\r\n# :lat  => 91.23\r\n# :lon  => 123.85\r\n\r\nclass Location < ActiveRecord::Base\r\n  attr_accessor :coor, :lat, :lon, :name\r\n  validates :coor, coordinate: true\r\n  validates :lat,  coordinate: { boundary: :latitude }\r\n  validates :lon,  coordinate: { boundary: :longitude }\r\nend\r\n```\r\n\r\nOr any ruby class:\r\n\r\n```ruby\r\n# :coor => [78.47, -169.92]\r\n# :lat  => 91.23\r\n# :lon  => 123.85\r\n\r\nclass Location\r\n  include ActiveModel::Validations\r\n  attr_accessor :coor, :lat, :lon, :name\r\n  validates :coor, coordinate: true\r\n  validates :lat,  coordinate: { boundary: :latitude }\r\n  validates :lon,  coordinate: { boundary: :longitude }\r\nend\r\n```\r\n\r\nRSpec matcher is also available for your convenience:\r\n\r\n```ruby\r\ndescribe Location do\r\n  it { should ensure_valid_coordinate_format_of(:coor) }\r\n  it { should_not ensure_valid_coordinate_format_of(:name) }\r\nend\r\n```\r\n\r\n## CreditCardValidator\r\n\r\n**Ex:** 370000000000002\r\n\r\n**Rules:**\r\n * Characters: 0-9 .-\r\n * Must include: 0-9\r\n * Range for card digits: 12-19\r\n\r\nWith an ActiveRecord model:\r\n\r\n```ruby\r\nclass Invoice < ActiveRecord::Base\r\n  attr_accessor :cc_number, :name\r\n  validates :cc_number, credit_card: true\r\nend\r\n```\r\n\r\nOr any ruby class:\r\n\r\n```ruby\r\nclass Invoice\r\n  include ActiveModel::Validations\r\n  attr_accessor :cc_number, :name\r\n  validates :cc_number, credit_card: true\r\nend\r\n```\r\n\r\nOptions: :strict, card: [:american_express (:amex), :diners_club, :discover, :jbc, :laser, :maestro, :mastercard, :solo, :unionpay, :visa]\r\nStrict: requires not including spaces\r\n\r\n```ruby\r\nvalidates :cc_number, credit_card: { card: :visa }\r\nvalidates :cc_number, credit_card: { strict: true }\r\nvalidates :cc_number, credit_card: { card: :discover, strict: true }\r\n```\r\n\r\nRSpec matcher is also available for your convenience:\r\n\r\n```ruby\r\ndescribe Invoice do\r\n  it { should ensure_valid_credit_card_format_of(:cc_number) }\r\n  it { should_not ensure_valid_credit_card_format_of(:name) }\r\nend\r\n```\r\n\r\n## CurrencyValidator\r\n\r\n**Ex:** 123.00 or .1\r\n\r\n**Rules:**\r\n * Characters: 0-9 .\r\n * Must include: .\r\n * Range for cents: 1-2\r\n\r\nWith an ActiveRecord model:\r\n\r\n```ruby\r\nclass Product < ActiveRecord::Base\r\n  attr_accessor :price, :name\r\n  validates :price, currency: true\r\nend\r\n```\r\n\r\nOr any ruby class:\r\n\r\n```ruby\r\nclass Product\r\n  include ActiveModel::Validations\r\n  attr_accessor :price, :name\r\n  validates :price, currency: true\r\nend\r\n```\r\n\r\nOptions: :strict\r\nStrict: requires leading number and exactly two decimals, 1.45\r\n\r\n```ruby\r\nvalidates :price, currency: { strict: true }\r\n```\r\n\r\nRSpec matcher is also available for your convenience:\r\n\r\n```ruby\r\ndescribe Product do\r\n  it { should ensure_valid_currency_format_of(:price) }\r\n  it { should_not ensure_valid_currency_format_of(:name) }\r\nend\r\n```\r\n\r\n## CusipValidator\r\n\r\n**Ex:** 125509BG3\r\n\r\n**Rules:**\r\n * Characters: 0-1 A-Z\r\n * Length: 1-9\r\n\r\nWith an ActiveRecord model:\r\n\r\n```ruby\r\nclass Bank < ActiveRecord::Base\r\n  attr_accessor :code, :name\r\n  validates :code, cusip: true\r\nend\r\n```\r\n\r\nOr any ruby class:\r\n\r\n```ruby\r\nclass Bank\r\n  include ActiveModel::Validations\r\n  attr_accessor :code, :name\r\n  validates :code, cusip: true\r\nend\r\n```\r\n\r\nRSpec matcher is also available for your convenience:\r\n\r\n```ruby\r\ndescribe Bank do\r\n  it { should ensure_valid_cusip_format_of(:code) }\r\n  it { should_not ensure_cusip_base64_format_of(:name) }\r\nend\r\n```\r\n\r\n## EmailValidator\r\n\r\n**Ex:** user@example.com or user+123@example-site.com\r\n\r\n**Rules:**\r\n * Characters in username: a-z 0-9 -_+.\r\n * Must include: @\r\n * Characters in domain: a-z 0-9 -\r\n * Must include extension: .co, .org, .museum\r\n\r\nWith an ActiveRecord model:\r\n\r\n```ruby\r\nclass User < ActiveRecord::Base\r\n  attr_accessor :email, :name\r\n  validates :email, email: true\r\nend\r\n```\r\n\r\nOr any ruby class:\r\n\r\n```ruby\r\nclass User\r\n  include ActiveModel::Validations\r\n  attr_accessor :email, :name\r\n  validates :email, email: true\r\nend\r\n```\r\n\r\nOptions: :domains\r\n\r\n```ruby\r\nvalidates :email, email: { domains: 'com' }\r\nvalidates :email, email: { domains: :com }\r\nvalidates :email, email: { domains: [:com, 'edu'] }\r\n```\r\n\r\nRSpec matcher is also available for your convenience:\r\n\r\n```ruby\r\ndescribe User do\r\n  it { should ensure_valid_email_format_of(:email) }\r\n  it { should_not ensure_valid_email_format_of(:name) }\r\nend\r\n```\r\n\r\n## EqualityValidator\r\n\r\n**Operators:**\r\n * Less than: x < y\r\n * Less than or equal to: x <= y\r\n * Greater than: x > y\r\n * Greater than or equal to: x >= y\r\n * Equal to: x == y\r\n * Not equal to: x != y\r\n\r\n\r\n**Rules:**\r\n * Equal and not equal to: cannot be nil\r\n\r\nWith an ActiveRecord model:\r\n\r\n```ruby\r\nclass Auction < ActiveRecord::Base\r\n  attr_accessor :bid, :price, :product\r\n  validates :bid, equality: { operator: :greater_than_or_equal_to, to: :price }\r\nend\r\n```\r\n\r\nOr any ruby class:\r\n\r\n```ruby\r\nclass Auction\r\n  include ActiveModel::Validations\r\n  attr_accessor :bid, :price, :product\r\n  validates :bid, equality: { operator: :greater_than_or_equal_to, to: :price }\r\nend\r\n```\r\n\r\nRSpec matcher is also available for your convenience:\r\n\r\n```ruby\r\ndescribe Auction do\r\n  it { should ensure_equality_of(:bid).to(:price) }\r\n  it { should_not ensure_equality_of(:bid).to(:product) }\r\nend\r\n```\r\n\r\n## HexValidator\r\n\r\n**Ex:** #a9a9a9 or #999 or aaaaaa or AAA\r\n\r\n**Rules:**\r\n* Prefix (non-mandatory): #\r\n* Length: 3 or 6\r\n* Characters: A-F a-f 0-9\r\n\r\nWith an ActiveRecord model:\r\n\r\n```ruby\r\nclass Profile < ActiveRecord::Base\r\n  attr_accessor :color, :trim\r\n  validates :color, hex: true\r\nend\r\n```\r\n\r\nOr any ruby class:\r\n\r\n```ruby\r\nclass Profile\r\n  include ActiveModel::Validations\r\n  attr_accessor :color, :trim\r\n  validates :color, hex: true\r\nend\r\n```\r\n\r\nRSpec matcher is also available for your convenience:\r\n\r\n```ruby\r\ndescribe Color do\r\n  it { should ensure_valid_hex_format_of(:color) }\r\n  it { should_not ensure_valid_hex_format_of(:trim) }\r\nend\r\n```\r\n\r\n## ImeiValidator\r\n\r\n**Ex:** 356843052637512 or 35-6843052-637512 or 35.6843052.637512\r\n\r\n**Rules:**\r\n* Length: min 14\r\n* Characters: 0-9 -.\r\n\r\nWith an ActiveRecord model:\r\n\r\n```ruby\r\nclass User < ActiveRecord::Base\r\n  attr_accessor :imei, :name\r\n  validates :imei, imei: true\r\nend\r\n```\r\n\r\nOr any ruby class:\r\n\r\n```ruby\r\nclass User\r\n  include ActiveModel::Validations\r\n  attr_accessor :imei, :name\r\n  validates :imei, imei: true\r\nend\r\n```\r\n\r\nRSpec matcher is also available for your convenience:\r\n\r\n```ruby\r\ndescribe User do\r\n  it { should ensure_valid_imei_format_of(:imei) }\r\n  it { should_not ensure_valid_imei_format_of(:name) }\r\nend\r\n```\r\n\r\n## IpValidator\r\n\r\n**Ex:** 0.0.0.0 or 127.0.0.1 or 167.39.240.31\r\n\r\n**Rules:**\r\n* Length: min 7\r\n* Characters: 0-9 .\r\n\r\nWith an ActiveRecord model:\r\n\r\n```ruby\r\nclass User < ActiveRecord::Base\r\n  attr_accessor :ip, :name\r\n  validates :ip, ip: true\r\nend\r\n```\r\n\r\nOr any ruby class:\r\n\r\n```ruby\r\nclass User\r\n  include ActiveModel::Validations\r\n  attr_accessor :ip, :name\r\n  validates :ip, ip: true\r\nend\r\n```\r\n\r\nRSpec matcher is also available for your convenience:\r\n\r\n```ruby\r\ndescribe User do\r\n  it { should ensure_valid_ip_format_of(:ip) }\r\n  it { should_not ensure_valid_ip_format_of(:name) }\r\nend\r\n```\r\n\r\n## IsbnValidator\r\n\r\n**Ex:** 9519854894 or 0-9722051-1-x or 978 159059 9938\r\n\r\n**Rules:**\r\n* Length: 10 or 13\r\n* Characters: 0-9 -|\r\n\r\nWith an ActiveRecord model:\r\n\r\n```ruby\r\nclass User < ActiveRecord::Base\r\n  attr_accessor :isbn, :name\r\n  validates :isbn, isbn: true\r\nend\r\n```\r\n\r\nOr any ruby class:\r\n\r\n```ruby\r\nclass User\r\n  include ActiveModel::Validations\r\n  attr_accessor :isbn, :name\r\n  validates :isbn, isbn: true\r\nend\r\n```\r\n\r\nRSpec matcher is also available for your convenience:\r\n\r\n```ruby\r\ndescribe User do\r\n  it { should ensure_valid_isbn_format_of(:isbn) }\r\n  it { should_not ensure_valid_isbn_format_of(:name) }\r\nend\r\n```\r\n\r\n## IsinValidator\r\n\r\n**Ex:** US0378331005 or AU0000XVGZA3\r\n\r\n**Rules:**\r\n* Length: 12\r\n* Characters: 0-9 A-Z\r\n* Start: valid country code\r\n\r\nWith an ActiveRecord model:\r\n\r\n```ruby\r\nclass Trade < ActiveRecord::Base\r\n  attr_accessor :isin, :name\r\n  validates :isin, isin: true\r\nend\r\n```\r\n\r\nOr any ruby class:\r\n\r\n```ruby\r\nclass User\r\n  include ActiveModel::Validations\r\n  attr_accessor :isin, :name\r\n  validates :isin, isin: true\r\nend\r\n```\r\n\r\nRSpec matcher is also available for your convenience:\r\n\r\n```ruby\r\ndescribe User do\r\n  it { should ensure_valid_isin_format_of(:isin) }\r\n  it { should_not ensure_valid_isin_format_of(:name) }\r\nend\r\n```\r\n\r\n## MacAddressValidator\r\n\r\n**Ex:**\r\n    '08:00:2b:01:02:03'\r\n    '08-00-2b-01-02-03'\r\n    '08002b:010203'\r\n    '08002b-010203'\r\n    '0800.2b01.0203'\r\n    '08002b010203'\r\n\r\n**Rules:**\r\n* Characters: a-z 0-9 -.:\r\n\r\nWith an ActiveRecord model:\r\n\r\n```ruby\r\nclass Device < ActiveRecord::Base\r\n  attr_accessor :mac, :name\r\n  validates :mac, mac_address: true\r\nend\r\n```\r\n\r\nOr any ruby class:\r\n\r\n```ruby\r\nclass Device\r\n  include ActiveModel::Validations\r\n  attr_accessor :mac, :name\r\n  validates :mac, mac_address: true\r\nend\r\n```\r\n\r\nRSpec matcher is also available for your convenience:\r\n\r\n```ruby\r\ndescribe Device do\r\n  it { should ensure_valid_mac_address_format_of }\r\n  it { should_not ensure_valid_mac_address_format_of(:name) }\r\nend\r\n```\r\n\r\n## NameValidator\r\n\r\n**Ex:** James Brown or Billy Bob Thorton Jr\r\n\r\n**Rules:**\r\n* Range: 2 - 5 names\r\n* Characters: a-z -\r\n* Must include: First Last\r\n\r\nWith an ActiveRecord model:\r\n\r\n```ruby\r\nclass User < ActiveRecord::Base\r\n  attr_accessor :name, :email\r\n  validates :name, name: true\r\nend\r\n```\r\n\r\nOr any ruby class:\r\n\r\n```ruby\r\nclass User\r\n  include ActiveModel::Validations\r\n  attr_accessor :name, :email\r\n  validates :name, name: true\r\nend\r\n```\r\n\r\nRSpec matcher is also available for your convenience:\r\n\r\n```ruby\r\ndescribe User do\r\n  it { should ensure_valid_name_format_of(:name) }\r\n  it { should_not ensure_valid_name_format_of(:email) }\r\nend\r\n```\r\n\r\n## PasswordValidator\r\n\r\n**Ex:** password or password123 or pa!!word\r\n\r\n**Rules:**\r\n* Range: 6-18\r\n* Characters: A-Z a-z 0-9 -_!@#$%^&*\r\n\r\nWith an ActiveRecord model:\r\n\r\n```ruby\r\nclass User < ActiveRecord::Base\r\n  attr_accessor :password, :name\r\n  validates :password, password: true\r\nend\r\n```\r\n\r\nOr any ruby class:\r\n\r\n```ruby\r\nclass User\r\n  include ActiveModel::Validations\r\n  attr_accessor :password, :name\r\n  validates :password, password: true\r\nend\r\n```\r\nOptions: :strict\r\nStrict: requires length between 6 and 18, one number, lowercase, upcase letter\r\n\r\n```ruby\r\nvalidates :password, password: { strict: true }\r\n```\r\n\r\nRSpec matcher is also available for your convenience:\r\n\r\n```ruby\r\ndescribe User do\r\n  it { should ensure_valid_password_format_of(:password) }\r\n  it { should_not ensure_valid_password_format_of(:name) }\r\nend\r\n```\r\n\r\n## PhoneValidator\r\n\r\n**Ex:** 555 333 4444 or (555) 123-4567 or +1 (555) 123 4567 ext-890\r\n\r\n**Rules:**\r\n* Characters: a-z 0-9 -()+\r\n\r\nWith an ActiveRecord model:\r\n\r\n```ruby\r\nclass User < ActiveRecord::Base\r\n  attr_accessor :phone, :name\r\n  validates :phone, phone: true\r\nend\r\n```\r\n\r\nOr any ruby class:\r\n\r\n```ruby\r\nclass User\r\n  include ActiveModel::Validations\r\n  attr_accessor :phone, :name\r\n  validates :phone, phone: true\r\nend\r\n```\r\n\r\nRSpec matcher is also available for your convenience:\r\n\r\n```ruby\r\ndescribe User do\r\n  it { should ensure_valid_phone_format_of(:phone) }\r\n  it { should_not ensure_valid_phone_format_of(:name) }\r\nend\r\n```\r\n\r\n## SedolValidator\r\n\r\n**Ex:** B0WNLY7\r\n\r\n**Rules:**\r\n* Characters: A-Z 0-9\r\n\r\nWith an ActiveRecord model:\r\n\r\n```ruby\r\nclass Trade < ActiveRecord::Base\r\n  attr_accessor :sedol, :name\r\n  validates :sedol, sedol: true\r\nend\r\n```\r\n\r\nOr any ruby class:\r\n\r\n```ruby\r\nclass Trade\r\n  include ActiveModel::Validations\r\n  attr_accessor :sedol, :name\r\n  validates :sedol, sedol: true\r\nend\r\n```\r\n\r\nRSpec matcher is also available for your convenience:\r\n\r\n```ruby\r\ndescribe Trade do\r\n  it { should ensure_valid_sedol_format_of(:sedol) }\r\n  it { should_not ensure_valid_sedol_format_of(:name) }\r\nend\r\n```\r\n\r\n## SlugValidator\r\n\r\n**Ex:** slug1234 or slug-1234\r\n\r\n**Rules:**\r\n* Characters: a-z 0-9 -\r\n\r\nWith an ActiveRecord model:\r\n\r\n```ruby\r\nclass User < ActiveRecord::Base\r\n  attr_accessor :slug, :name\r\n  validates :slug, slug: true\r\nend\r\n```\r\n\r\nOr any ruby class:\r\n\r\n```ruby\r\nclass User\r\n  include ActiveModel::Validations\r\n  attr_accessor :slug, :name\r\n  validates :slug, slug: true\r\nend\r\n```\r\n\r\nRSpec matcher is also available for your convenience:\r\n\r\n```ruby\r\ndescribe User do\r\n  it { should ensure_valid_slug_format_of(:slug) }\r\n  it { should_not ensure_valid_slug_format_of(:name) }\r\nend\r\n```\r\n\r\n## SsnValidator\r\n\r\n**Ex:** 333-22-4444 or 333224444\r\n\r\n**Rules:**\r\n* Characters: 0-9 -\r\n\r\nWith an ActiveRecord model:\r\n\r\n```ruby\r\nclass User < ActiveRecord::Base\r\n  attr_accessor :ssn, :name\r\n  validates :ssn, ssn: true\r\nend\r\n```\r\n\r\nOr any ruby class:\r\n\r\n```ruby\r\nclass User\r\n  include ActiveModel::Validations\r\n  attr_accessor :ssn, :name\r\n  validates :ssn, ssn: true\r\nend\r\n```\r\n\r\nRSpec matcher is also available for your convenience:\r\n\r\n```ruby\r\ndescribe User do\r\n  it { should ensure_valid_ssn_format_of(:ssn) }\r\n  it { should_not ensure_valid_ssn_format_of(:name) }\r\nend\r\n```\r\n\r\n## TrackingNumberValidator\r\n\r\n**Ex:** 1Z8V92A70367203024\r\n\r\nWith an ActiveRecord model:\r\n\r\n```ruby\r\nclass Package < ActiveRecord::Base\r\n  attr_accessor :tracking_number, :name\r\n  validates :tracking_number, tracking_number: true\r\nend\r\n```\r\n\r\nOr any ruby class:\r\n\r\n```ruby\r\nclass Package\r\n  include ActiveModel::Validations\r\n  attr_accessor :tracking_number, :name\r\n  validates :tracking_number, tracking_number: true\r\nend\r\n```\r\n\r\nOptions:\r\n  * carrier: :dhl, :fedex, :ontrac, :ups, :usps\r\n  * service: :express, :express_air, :ground, :ground18, :ground96, :smart_post, :usps13, :usps20, :usps91\r\n\r\n```ruby\r\nvalidates :tracking_number, tracking_number: { carrier: :dhl }\r\nvalidates :tracking_number, tracking_number: { carrier: :fedex, service: :express }\r\n```\r\n\r\nRSpec matcher is also available for your convenience:\r\n\r\n```ruby\r\ndescribe Package do\r\n  it { should ensure_valid_tracking_number_format_of(:tracking_number) }\r\n  it { should_not ensure_valid_tracking_number_format_of(:name) }\r\nend\r\n```\r\n\r\n## TypeValidator\r\n\r\n**Ex:** Boolean or String\r\n\r\n**Rules:**\r\n* Any valid ruby class\r\n\r\nWith an ActiveRecord model:\r\n\r\n```ruby\r\nclass User < ActiveRecord::Base\r\n  attr_accessor :active, :name\r\n  validates :active, type: Boolean\r\nend\r\n```\r\n\r\nOr any ruby class:\r\n\r\n```ruby\r\nclass User\r\n  include ActiveModel::Validations\r\n  attr_accessor :active, :name\r\n  validates :active, type: Boolean\r\nend\r\n```\r\n\r\nRSpec matcher is also available for your convenience:\r\n\r\n```ruby\r\ndescribe User do\r\n  it { should ensure_valid_type_format_of(:active) }\r\n  it { should_not ensure_valid_type_format_of(:name) }\r\nend\r\n```\r\n\r\n## UrlValidator\r\n\r\n**Ex:** example.com or http://www.example.com\r\n\r\n**Rules:**\r\n* Characters in root: a-z 0-9 -.//:\r\n* Characters in domain: a-z 0-9 -\r\n* Must include extension: .co, .org, .museum\r\n\r\nWith an ActiveRecord model:\r\n\r\n```ruby\r\nclass User < ActiveRecord::Base\r\n  attr_accessor :url, :name\r\n  validates :url, url: true\r\nend\r\n```\r\n\r\nOr any ruby class:\r\n\r\n```ruby\r\nclass User\r\n  include ActiveModel::Validations\r\n  attr_accessor :url, :name\r\n  validates :url, url: true\r\nend\r\n```\r\n\r\nOptions: :domains, :root, :scheme\r\n\r\n```ruby\r\nvalidates :url, url: { scheme: :http }\r\nvalidates :url, url: { scheme: [:http, 'https'] }\r\nvalidates :url, url: { scheme: :http, root: true, domains: :com }\r\nvalidates :url, url: { root: true }\r\nvalidates :url, url: { root: true, domains: :com }\r\nvalidates :url, url: { domains: 'com' }\r\nvalidates :url, url: { domains: :com }\r\nvalidates :url, url: { domains: [:com, 'edu'] }\r\n```\r\n\r\nRSpec matcher is also available for your convenience:\r\n\r\n```ruby\r\ndescribe User do\r\n  it { should ensure_valid_url_format_of(:url) }\r\n  it { should_not ensure_valid_url_format_of(:name) }\r\nend\r\n```\r\n\r\n## UsernameValidator\r\n\r\n**Ex:** username123 or username\r\n\r\n**Rules:**\r\n* Range: 2-16\r\n* Characters: a-z 0-9 -_\r\n\r\nWith an ActiveRecord model:\r\n\r\n```ruby\r\nclass User < ActiveRecord::Base\r\n  attr_accessor :username, :name\r\n  validates :username, username: true\r\nend\r\n```\r\n\r\nOr any ruby class:\r\n\r\n```ruby\r\nclass User\r\n  include ActiveModel::Validations\r\n  attr_accessor :username, :name\r\n  validates :username, username: true\r\nend\r\n```\r\n\r\nRSpec matcher is also available for your convenience:\r\n\r\n```ruby\r\ndescribe User do\r\n  it { should ensure_valid_username_format_of(:username) }\r\n  it { should_not ensure_valid_username_format_of(:name) }\r\nend\r\n```\r\n\r\n## UuidValidator\r\n\r\n**Ex:** 886313e1-3b8a-5372-9b90-0c9aee199e5d\r\n\r\n**Rules:**\r\n* Characters: A-Z a-z 0-9 -\r\n\r\nWith an ActiveRecord model:\r\n\r\n```ruby\r\nclass User < ActiveRecord::Base\r\n  attr_accessor :uuid, :name\r\n  validates :uuid, uuid: true\r\nend\r\n```\r\n\r\nOr any ruby class:\r\n\r\n```ruby\r\nclass User\r\n  include ActiveModel::Validations\r\n  attr_accessor :uuid, :name\r\n  validates :uuid, username: true\r\nend\r\n```\r\n\r\nOptions: :version\r\n\r\n```ruby\r\nvalidates :uuid, uuid: { version: 3 }\r\n```\r\n\r\nRSpec matcher is also available for your convenience:\r\n\r\n```ruby\r\ndescribe User do\r\n  it { should ensure_valid_uuid_format_of(:uuid) }\r\n  it { should_not ensure_valid_uuid_format_of(:name) }\r\nend\r\n```\r\n\r\n## Contributing\r\n\r\nYour contribution is welcome.\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Added some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}